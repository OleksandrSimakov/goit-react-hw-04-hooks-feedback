{"version":3,"sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/App/App.jsx","index.js"],"names":["ButtonEl","styled","button","Button","btnText","onClick","name","FeedbackOptions","options","onLeaveFeedback","map","option","StatisticsList","ul","Statistics","good","neutral","bad","total","positivePercentage","sectionEl","section","Section","title","children","Notification","message","App","state","handleClick","e","btnName","target","setState","this","Math","round","Object","keys","countTotalFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAaeA,EAXEC,IAAOC,OAAV,6O,OCSCC,MARf,YAAuC,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QACzB,OACE,cAAC,EAAD,CAAUA,QAASA,EAASC,KAAMF,EAAlC,SACGA,KCSQG,I,EAAAA,EAXf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,cAAC,EAAD,CAAqBP,QAASO,EAAQN,QAASI,GAAlCE,OCEFC,EANQX,IAAOY,GAAV,8ECsBLC,I,EAAAA,EApBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,eAAC,EAAD,WACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,YCLSC,EAJGnB,IAAOoB,QAAV,mDCeAC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,eAAC,EAAD,WACE,6BAAKD,IACJC,MCGQC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,KCGQC,E,4MACnBC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPY,YAAc,SAAAC,GACZ,IAAMC,EAAUD,EAAEE,OAAO1B,KAEzB,EAAK2B,SAAL,eACGF,EAAU,EAAKH,MAAMG,GAAW,K,wDAIrC,WACE,MAA+BG,KAAKN,MAEpC,OAFA,EAAQb,KAAR,EAAcC,QAAd,EAAuBC,M,6CAIzB,WACE,MAA+BiB,KAAKN,MAA5Bb,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAIvB,OAH2BkB,KAAKC,MAC7BrB,GAAQA,EAAOC,EAAUC,GAAQ,O,oBAKtC,WACE,IAAMT,EAAU6B,OAAOC,KAAKJ,KAAKN,OACjC,EAA+BM,KAAKN,MAA5Bb,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,qCACE,cAAC,EAAD,CAASM,MAAM,wBAAf,SACE,cAAC,EAAD,CACEf,QAASA,EACTC,gBAAiByB,KAAKL,gBAI1B,cAAC,EAAD,CAASN,MAAM,aAAf,SACGW,KAAKK,qBAAuB,EAC3B,cAAC,EAAD,CACExB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgB,KAAKK,qBACZpB,mBAAoBe,KAAKM,oCAG3B,cAAC,EAAD,CAAcd,QAAS,+B,GAnDFe,aCAjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.23b9cfb3.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nconst ButtonEl = styled.button`\n  background-color: white;\n  text-transform: capitalize;\n  border-radius: 5px;\n  border: 2px solid whitesmoke;\n  font-weight: 500;\n  cursor: pointer;\n  :not(:last-child) {\n    margin-right: 10px;\n  }\n`;\nexport default ButtonEl;\n","import ButtonEl from './Button.styled';\nimport PropTypes from 'prop-types';\n\nfunction Button({ btnText, onClick }) {\n  return (\n    <ButtonEl onClick={onClick} name={btnText}>\n      {btnText}\n    </ButtonEl>\n  );\n}\n\nexport default Button;\n\nButton.propTypes = {\n  btnText: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport Button from '../Button/Button';\nimport PropTypes from 'prop-types';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return options.map(option => (\n    <Button key={option} btnText={option} onClick={onLeaveFeedback} />\n  ));\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import styled from '@emotion/styled';\n\nconst StatisticsList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport default StatisticsList;\n","import React from 'react';\nimport StatisticsList from './Statistics.styled';\nimport PropTypes from 'prop-types';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <StatisticsList>\n      <li>Good: {good}</li>\n      <li>Neutral: {neutral}</li>\n      <li>Bad: {bad}</li>\n      <li>Total: {total}</li>\n      <li>Positive feedback: {positivePercentage} %</li>\n    </StatisticsList>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import styled from '@emotion/styled';\n\nconst sectionEl = styled.section`\n  padding-left: 20px;\n`;\n\nexport default sectionEl;\n","import SectionEl from './Section.styled';\nimport PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <SectionEl>\n      <h2>{title}</h2>\n      {children}\n    </SectionEl>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { Component } from 'react';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Statistics from '../Statistics/Statistics';\nimport Section from '../Section/Section';\nimport Notification from '../Notification/Notification';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClick = e => {\n    const btnName = e.target.name;\n\n    this.setState({\n      [btnName]: this.state[btnName] + 1,\n    });\n  };\n\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  }\n  countPositiveFeedbackPercentage() {\n    const { good, neutral, bad } = this.state;\n    const positivePercentage = Math.round(\n      (good / (good + neutral + bad)) * 100,\n    );\n    return positivePercentage;\n  }\n\n  render() {\n    const options = Object.keys(this.state);\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please Leave Feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.handleClick}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message={'No feedback given'}></Notification>\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}